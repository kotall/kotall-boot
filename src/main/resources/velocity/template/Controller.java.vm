package ${package}.web.controller.${module};

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kotall.rms.core.annotation.SysLog;
import com.kotall.rms.web.controller.sys.AbstractController;
import com.kotall.rms.common.utils.Page;
import com.kotall.rms.common.utils.Result;
        import com.kotall.rms.web.util.ResultKit;
import ${package}.common.entity.${module}.${className}Entity;
import ${package}.core.service.${module}.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 * @since 1.0.0
 */
@RestController
@RequestMapping("/${requestMapping}")
public class ${className}Controller extends AbstractController {
	
	@Autowired
	private ${className}Service ${objName}Service;
	
	/**
	 * 列表
	 * @param params
	 * @return
	 */
	@RequestMapping("/list")
	public Page<${className}Entity> list(@RequestBody Map<String, Object> params) {
		return ${objName}Service.queryByPage(params);
	}
		
	/**
	 * 新增
	 * @param ${objName}
	 * @return
	 */
	@SysLog("新增${comments}")
	@RequestMapping("/save")
	public Result save(@RequestBody ${className}Entity ${objName}) {
	    boolean isSaved = ${objName}Service.save(${objName});
		return ResultKit.msg(isSaved);
	}
	
	/**
	 * 根据id查询详情
	 * @param id
	 * @return
	 */
	@RequestMapping("/info")
	public Result getById(@RequestBody Integer id) {
		${className}Entity ${objName} = ${objName}Service.getById(id);
		return ResultKit.msg(${objName});
	}
	
	/**
	 * 修改
	 * @param ${objName}
	 * @return
	 */
	@SysLog("修改${comments}")
	@RequestMapping("/update")
	public Result update(@RequestBody ${className}Entity ${objName}) {
        boolean isUpdated = ${objName}Service.update(${objName});
		return  ResultKit.msg(isUpdated);
	}
	
	/**
	 * 删除
	 * @param ids
	 * @return
	 */
	@SysLog("删除${comments}")
	@RequestMapping("/remove")
	public Result batchRemove(@RequestBody Integer[] ids) {
	    boolean isDeleted = ${objName}Service.deleteByIds(ids);
		return ResultKit.msg(isDeleted);
	}
	
}
